/*
 * File: app/view/charts/PlayerVsPlayerViewModel.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Enif.view.charts.PlayerVsPlayerViewModel', {
    extend: 'Ext.app.ViewModel',
    alias: 'viewmodel.charts.playervsplayer',

    requires: [
        'Ext.data.Store',
        'Ext.data.field.Integer',
        'Ext.data.ChainedStore',
        'Ext.util.Filter',
        'Ext.app.bind.Formula'
    ],

    data: {
        numberOfMatches: 0,
        animate: false,
        animateDelay: 200,
        wins: '',
        loses: '',
        draws: '',
        score: ''
    },

    stores: {
        playedGamesScore: {
            data: [
                {
                    data: 1,
                    time: '8/14/2001',
                    zeroData: 0
                },
                {
                    data: -3,
                    time: '3/23/2004',
                    zeroData: 0
                },
                {
                    data: 5,
                    time: '11/20/2002',
                    zeroData: 0
                },
                {
                    data: 9,
                    time: '9/6/2005',
                    zeroData: 0
                },
                {
                    data: 1,
                    time: '4/21/2013',
                    zeroData: 0
                }
            ],
            fields: [
                {
                    type: 'int',
                    name: 'data'
                },
                {
                    name: 'time'
                },
                {
                    name: 'zeroData'
                },
                {
                    name: 'match'
                }
            ],
            listeners: {
                load: 'onStoreLoad'
            }
        },
        playedGames: {
            source: 'GameRawData',
            filters: {
                filterFn: function(item) {
                    // we want to remove all data from the store on load
                    return false;
                }
            }
        }
    },
    formulas: {
        getNumberOfMatches: function(get) {
            return 'Played matches: ' + get('numberOfMatches');
        },
        getScoreLabel: function(get) {
            const fisrtPlayerName = Enif.app.getController('storeLoadController').getPlayerName(get('firstPlayerId')),
            secondPlaerName = Enif.app.getController('storeLoadController').getPlayerName(get('secondPlayerId')),
            info = `<h2>${fisrtPlayerName} vs ${secondPlaerName} has score: ${get('score')} </h2>`+
            `Wins: ${get('wins')} Loses: ${get('loses')} Draws: ${get('draws')}`;

            const html = `<div align="center"><b>${info}</b></div>`;

            return html;
        }
    }

});